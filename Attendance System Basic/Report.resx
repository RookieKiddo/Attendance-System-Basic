<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnPDF.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAAsTAAALEwEAmpwYAAAAB3RJ
        TUUH4wwYFyUKHRbd8QAAAltJREFUSEuVlUkITVEYx695SuaUZFqxI7GxoijzsLAgShakDAsphbKxMGbI
        HMVCMmwJ2VrIuJCtBVmSbEj8fu+d73Xvffdd9/3r13nn3HO+/znfGV5W0sBUNtWgVDbSgFSOhRkwrYbp
        MAZUI5PotBU+wRt414O38B6+wX5Qg1NZqZi5MsDi9s9sJAyvYBSo2/AX9rZqNSZhMAJegylQeeO8ItAp
        0EB22IAq9zACOTuXb/6Vnf0WWB8C9lNh8CuVa0B17UnZwA1U0a4cFPUoJ8Iu2A0v4C6orlT9zyBmNAn2
        wEN4BmdhLqjlYLvqawWR083wA0zFd/gCv1P9McyDfaAiXke9DGKpW8BAr2ARuA9qAhwCv72E2JvGBmoy
        /ISqAJGKVaDJ8VatjxQpc+7gBTAF7sD1xDW4D0vgHjgR744qrKLO4AF4Y92LcbAePI6yGjbCHNgOTiQ2
        vbCKOoMn8Ln9M5sFl8DTcy5xBQ7CJtDAPVKNDS6CA8fDaFgBS2FZKteBKzsM9psJqnCj6wwM5EAvkyY3
        4XLiKlyAheAD6QNYqV4GMYunoMnKVq3dHmNUPHprW7U+bnLk0dPj7AzyCLbBBjgKX8F2uQGalydQMPB/
        IPLohRoKfjfPpiMetj+p/ABeRJ9567dAFUzixzCwY7ymhVkk2TYVPJpuesh3Km8SYzsxIt9emOfg8k+C
        t1NOwGk4BkfAJ8I+fjsPHtnZEKmMlXQUTs7qABgsAufR1P8Bv1va5wzsBOXqPoIm820oqyotTRWHwkPi
        Ieh6k5QGHjM3OMo68n1V6QRl2T9TxYTyZClx7QAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="btnPrint.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJ
        TUUH4wwZByIYBXT+awAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAGMSURBVEhL
        vdZNKwVRHMfxsZenPBQ2nhIWRDayoLwA3oKFhQ0pFMVGsrNQSlIkKXnI48JT8rCTlZUVFl6H72/umdvM
        3HHvPXXcX32aMzVz/s05555zvYRUYxKzliZQgZxZxiiGLI1jHjmziuZU0yqdWEo1k1OKQRxBBWowg3bU
        I2lYAq1QgT0MoAQZucEcnqECxdCna05UPD4kYVVQgXuojztk5NxcXQxR0Fck8QJNuIa+LImGQs/pmX6E
        C5yZayQuv6CwBYaxjx8c4ANXph22hY0sDvFm2p9YhxaA94BKlDvQgEajBY9ID42L9EK/iy7/zvTtssAF
        VOTUv/uHAjvYhOZBcV6gCJoLXRXnBeIpfIE69GShXTNYhn8pQ5BIAW3J2klX8GWuNr6hyX1BLRS/70u/
        mVpei2iDfoW2WUMHFqC+FC1bfws4wS3e8Yo+2EbvPEHvH2Mbu4hEy0uFgmVmE72jrUEHv5ZqeC7S0URq
        oxtB/NTKh0aiG39Gx6T+UYzlYRrxs3kKOl5NPO8X8A513T2YybAAAAAASUVORK5CYII=
</value>
  </data>
</root>